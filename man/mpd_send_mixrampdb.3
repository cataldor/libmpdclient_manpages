.TH MPD_SEND_MIXRAMPDB 3 2019
.SH NAME
mpd_send_mixrampdb, mpd_run_mixrampdb, mpd_send_mixrampdelay, 
mpd_run_mixrampdelay \- sets overlapping for MPD's playlist songs
.SH SYNOPSIS
.B #include <mpd/client.h>
.PP
.BI "bool mpd_send_mixrampdb(struct mpd_connection *" connection ","
.BI "float " db );
.PP
.BI "bool mpd_run_mixrampdb(struct mpd_connection *" connection ", float " db );
.PP
.BI "bool mpd_send_mixrampdelay(struct mpd_connection *" connection ","
.BI "float " seconds );
.PP
.BI "bool mpd_run_mixrampdelay(struct mpd_connection *" connection ","
.BI "float " seconds );
.SH DESCRIPTION
The
.BR mpd_send_mixrampdb ()
function sets the threshold at which songs will be overlapped. Like crossfading
but doesn't fade the track volume, just overlaps. The songs need to have
MixRamp tags added by an external tool. 0
.I db
is the normalized maximum volume; so use negative values (I prefer -17
.IR db ).
In the absence of MixRamp tags, crossfading will be used. The function also
receives a
.I connection
to the MPD server.
.PP
The
.BR mpd_run_mixrampdb ()
function is a shortcut for
.BR mpd_send_mixrampdb ()
and
.BR mpd_response_finish (3).
.PP
The
.BR mpd_send_mixrampdelay ()
function sets additional
.I seconds
subtracted from the overlap calculated by mixrampdb. A value of
.I NaN
disables MixRamp overlapping and falls back to crossfading. The function also
receives a
.I connection
to the MPD server.
.PP
The
.BR mpd_run_mixrampdelay ()
function is a shortcut for
.BR mpd_send_mixrampdelay ()
and
.BR mpd_response_finish (3).
.SH RETURN VALUE
.BR mpd_send_mixrampdb (),
.BR mpd_run_mixrampdb (),
.BR mpd_send_mixrampdelay (),
.BR mpd_run_mixrampdelay ()
return true on success, false on error.
.SH ERRORS
The user should use one of the error functions of libmpdclient for
error-checking.
.SH HISTORY
The
.BR mpd_send_mixrampdb (),
.BR mpd_run_mixrampdb (),
.BR mpd_send_mixrampdelay (),
.BR mpd_run_mixrampdelay ()
functions were added to libmpdclient 2.2.
.SH SEE ALSO
.BR mpd_response_finish (3),
.BR mpd_send_current_song (3),
.BR mpd_run_current_song (3),
.BR mpd_send_play (3),
.BR mpd_run_play (3),
.BR mpd_send_seek_current (3),
.BR mpd_run_seek_current (3),
.BR mpd_send_clearerror (3),
.BR mpd_run_clearerror (3),
.BR mpd_send_seek_pos (3),
.BR mpd_run_seek_pos (3),
.BR mpd_send_seek_id (3),
.BR mpd_run_seek_id (3),
.BR mpd_send_seek_id_float (3),
.BR mpd_run_seek_id_float (3),
.BR mpd_send_play_pos (3),
.BR mpd_run_play_pos (3),
.BR mpd_send_play_id (3),
.BR mpd_run_play_id (3),
.BR mpd_send_stop (3),
.BR mpd_run_stop (3),
.BR mpd_send_pause (3),
.BR mpd_run_pause (3),
.BR mpd_send_toggle_pause (3),
.BR mpd_run_toggle_pause (3),
.BR mpd_send_next (3),
.BR mpd_run_next (3),
.BR mpd_send_previous (3),
.BR mpd_run_previous (3),
.BR mpd_send_repeat (3),
.BR mpd_run_repeat (3),
.BR mpd_send_random (3),
.BR mpd_run_random (3),
.BR mpd_send_single_state (3),
.BR mpd_send_single (3),
.BR mpd_run_single_state (3),
.BR mpd_run_single (3),
.BR mpd_send_consume (3),
.BR mpd_run_consume (3),
.BR mpd_send_crossfade (3),
.BR mpd_run_crossfade (3),
.BR mpd_connection_get_error (3),
.BR mpd_connection_get_error_message (3),
.BR mpd_connection_get_server_error (3),
.BR mpd_connection_get_system_error (3)
