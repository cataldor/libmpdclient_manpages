.TH MPD_SEND_PLAY_POS 3 2019
.SH NAME
mpd_send_play_pos, mpd_run_play_pos, mpd_send_play_id, mpd_run_play_id \- 
play a specified song
.SH SYNOPSIS
.B #include <mpd/client.h>
.PP
.BI "bool mpd_send_play_pos(struct mpd_connection *" connection ","
.BI "unsigned " song_pos );
.PP
.BI "bool mpd_run_play_pos(struct mpd_connection *" connection ","
.BI "unsigned " song_pos );
.PP
.BI "bool mpd_send_play_id(struct mpd_connection *" connection ","
.BI "unsigned " song_id );
.PP
.BI "bool mpd_run_play_id(struct mpd_connection *" connection ","
.BI "unsigned " song_id );
.SH DESCRIPTION
The
.BR mpd_send_play_pos ()
function starts playing the specified position 
.I song_pos
in the queue. The function also receives a
.I connection
to the MPD server.
.PP
The
.BR mpd_run_play_pos ()
function is a shortcut for
.BR mpd_send_play_pos ()
and
.BR mpd_response_finish (3).
.PP
The
.BR mpd_send_play_id ()
function start playing the specified id
.I song_id
of a song. The function also receives a
.I connection
to the MPD server.
.PP
The
.BR mpd_run_play_id ()
function is a shortcut for
.BR mpd_send_play_id ()
and
.BR mpd_response_finish (3).
.SH RETURN VALUE
.BR mpd_send_play_pos (),
.BR mpd_run_play_pos (),
.BR mpd_send_play_id (),
.BR mpd_run_play_id ()
return true on success, false on error.
.SH ERRORS
The user should use one of the error functions of libmpdclient for
error-checking.
.SH RATIONALE
There are two ways to address songs within the queue: by their position and by
their id.
.PP
The position is a 0-based index. It is unstable by design: if you move, delete
or insert songs, all following indices will change, and a client can never be
sure what song is behind a given index/position.
.PP
Song ids on the other hand are stable: an id is assigned to a song when it is
added, and will stay the same, no matter how much it is moved around. Adding
the same song twice will assign different ids to them, and a
deleted-and-readded song will have a new id. This way, a client can always be
sure the correct song is being used.
.PP
Many commands come in two flavors, one for each address type. Whenever
possible, ids should be used.
.SH SEE ALSO
.BR mpd_response_finish (3),
.BR mpd_send_current_song (3),
.BR mpd_run_current_song (3),
.BR mpd_send_play (3),
.BR mpd_run_play (3),
.BR mpd_send_seek_current (3),
.BR mpd_run_seek_current (3),
.BR mpd_send_clearerror (3),
.BR mpd_run_clearerror (3),
.BR mpd_send_seek_pos (3),
.BR mpd_run_seek_pos (3),
.BR mpd_send_seek_id (3),
.BR mpd_run_seek_id (3),
.BR mpd_send_seek_id_float (3),
.BR mpd_run_seek_id_float (3),
.BR mpd_send_stop (3),
.BR mpd_run_stop (3),
.BR mpd_send_toggle_pause (3),
.BR mpd_run_toggle_pause (3),
.BR mpd_send_pause (3),
.BR mpd_run_pause (3),
.BR mpd_send_next (3),
.BR mpd_run_next (3),
.BR mpd_send_previous (3),
.BR mpd_run_previous (3),
.BR mpd_send_repeat (3),
.BR mpd_run_repeat (3),
.BR mpd_send_random (3),
.BR mpd_run_random (3),
.BR mpd_send_single (3),
.BR mpd_run_single (3),
.BR mpd_send_consume (3),
.BR mpd_run_consume (3),
.BR mpd_send_crossfade (3),
.BR mpd_run_crossfade (3),
.BR mpd_send_mixramdb (3),
.BR mpd_run_mixramdb (3),
.BR mpd_send_mixrampdelay (3),
.BR mpd_run_mixrampdelay (3),
.BR mpd_connection_get_error (3),
.BR mpd_connection_get_error_message (3),
.BR mpd_connection_get_server_error (3),
.BR mpd_connection_get_system_error (3)
